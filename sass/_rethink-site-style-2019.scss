$font:"Helvetica Neue", Arial, sans-serif;
$color-brand: rgb(0, 176, 240);
$color-primary:rgb(145, 39, 143);
$font-header:CoRethink, "Helvetica Neue", Arial, sans-serif;

//fonts
$root-default: ":root";
$use-css-var: true;

$max-width:1120px;

$text-block-width: 736px;

$font:"Helvetica Neue", Arial, sans-serif;
// ------------------------------
// Sass Variables
// ------------------------------
$font-size-prefix: --font-size-;
$font-sizes: (
  root: 16px,
  paragraph: 1rem,
  1: 2.813rem, //45px
  2: 2.5rem, //40px
  3: 2rem, //32px
  4: 1.5rem, //24px
  5: 1.313rem, //21px
  6: 1rem,
  button: 1rem,
  small: 0.8125rem
);




html {
    font-size: font-size(root);

    /*font-size: calc(#{font-size(root)} - 2px);

  @include min(#{bp(sm)}) {
    font-size: font-size(root);
  }*/
}

// ------------------------------
// General
// ------------------------------
body {
  font-family: font-family(paragraph);
  font-size: font-size(paragraph);
  color: color(text);

  //container


}



// ------------------------------
// Set font-size function
// ------------------------------
@function font-size($font-size, $true-val:false) {
  @if $use-css-var == true {
    @if $true-val == true {
      @return map-get($font-sizes, $font-size); // True Val
    } @else {
      @return var(#{$font-size-prefix}#{$font-size}); // CSS Var
    }
  } @else {
    @return map-get($font-sizes, $font-size); // Disabled CSS Var
  }
}
// ------------------------------
// Set root variables
// ------------------------------

  #{$root-default} {
    @each $name, $font-size in $font-sizes {
      #{$font-size-prefix}#{$name}: $font-size;
    }
  }


//fonts in rem
//mobile??
//h5 nd 
body {
	font-family:$font;
  padding:1rem;
}
h1 {
	font-size:45px;
}
h2 {font-size:40px;}
h3 {font-size:32px;}
h4 {font-size:24px;}
h1,h2,h3,h4 {
	color:$color-brand;
	font:$font-header;
}
h5,h6 {
	color:rgb(0, 0, 0);
	font:$font;
	font-size: 16px;
}
p {
	//color:rgb(148, 148, 148);
}

p,
.is-p,
.has-font-size-p, span {
  font-size: font-size(paragraph);
  line-height: 1.5;
  max-width: $text-block-width;
  display: block;
}

p,
.is-p, span {
  margin-bottom: spacer(2);

  &.is-small {
      font-size: font-size(small);
  }
}


.btn, button, input[type="button"] {

	background: $color-primary;
	border-radius: 1000px;
	font-family:$font;
	color:white;
	font-size:1rem;
	padding:.875rem 1.75rem;
	margin:2rem 0;
	font-weight:700;
	text-decoration-line: none;
	text-decoration-style: solid;
	transition-delay:0s, 0s, 0s;
	transition-duration:0.5s, 0.5s, 0.5s;
	//width:106;
	display: inline-block;
	transition-property:background-color, color, border-color;
	transition-timing-function:ease-in-out, ease-in-out, ease-in-out;
  border:0;
  width:auto;
  min-width: 200px;

}
strong {
	font-weight: 700;
}
span {}
a  {}
a:link {}
label {
	//font-size: var(--font-size-5);
    //font-family: var(--font-family-title);
    font-weight: bolder;
    margin-bottom: 0;
    cursor: pointer;
    display: block;
    padding:1rem;

    @include min(bp(sm)) {
      padding: spacer(5) 0 spacer(3) 0;
    }

}

hr {
  margin: spacer(6) 0;
}

input {
	cursor: pointer;
	overflow: visible;
	display: block;
    width: 100%;
    border-radius: 1000px;
    border: none;
    //background: var(--color-gray-10);
    padding: .875rem 1.75rem;
    font-weight: 700;
    outline: 0;
    //color: var(--color-text-base);
    min-width: 10px;
    max-width: 550px;
}

select {
  border-radius: 0;
  //padding:inherit;
  min-height: auto;
  height:auto;
}

textarea {}

.quote {
	margin-top: 60px;    
	quotes: "“" "”" "‘" "’";
	//font-family: var(--font-family-title)!important;
	//    padding-right: var(--spacer-3);
	//    padding-left: var(--spacer-3);

}
.quote.is-groups .has-quotes:before {
    //color: var(--color-warning-base);
    content: open-quote;
}
.quote .has-quotes:before {
    font-size: 95px;
    position: absolute;
    top: 24px;
    left: 0;
    //font-family: var(--font-family-paragraph);
    //color: var(--color-brand-base);
    content: open-quote;
}
button, input, select, textarea {
    font-family: inherit;
    font-size: 100%;
    line-height: 1.15;
    margin: 0;
}

.Required {
  background-image:none !important;

}
.Required:before {
  content:"*";
  color:red;
  width:1rem;
  padding-right:0.5rem;
  }
.PanelField label, .PanelField .Label {
  width:100%;
}
.PanelFieldValue, .Left .PanelFieldValue {
  float:none !important;
}

/*
grey background
roundal
featured
img text with text btn
*/




